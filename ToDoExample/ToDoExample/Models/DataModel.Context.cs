//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ToDoExample.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ToDoEntities : DbContext
    {
        public ToDoEntities()
            : base("name=ToDoEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<aspnet_Users> aspnet_Users { get; set; }
        public virtual DbSet<ITEM> ITEMs { get; set; }
        public virtual DbSet<TO_DO> TO_DO { get; set; }
    
        public virtual int UPDATE_STATUS_ITEM(Nullable<byte> itemStatus, Nullable<long> itemID)
        {
            var itemStatusParameter = itemStatus.HasValue ?
                new ObjectParameter("ItemStatus", itemStatus) :
                new ObjectParameter("ItemStatus", typeof(byte));
    
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_STATUS_ITEM", itemStatusParameter, itemIDParameter);
        }
    
        public virtual int UPDATE_TO_DO(Nullable<long> toDoID, Nullable<byte> status)
        {
            var toDoIDParameter = toDoID.HasValue ?
                new ObjectParameter("ToDoID", toDoID) :
                new ObjectParameter("ToDoID", typeof(long));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UPDATE_TO_DO", toDoIDParameter, statusParameter);
        }
    
        public virtual int DELETE_ITEM(Nullable<long> itemID)
        {
            var itemIDParameter = itemID.HasValue ?
                new ObjectParameter("ItemID", itemID) :
                new ObjectParameter("ItemID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_ITEM", itemIDParameter);
        }
    
        public virtual int DELETE_TO_DO(Nullable<long> toDoID)
        {
            var toDoIDParameter = toDoID.HasValue ?
                new ObjectParameter("ToDoID", toDoID) :
                new ObjectParameter("ToDoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_TO_DO", toDoIDParameter);
        }
    
        public virtual int DELETE_ITEM_TO_DO(Nullable<long> toDoID)
        {
            var toDoIDParameter = toDoID.HasValue ?
                new ObjectParameter("ToDoID", toDoID) :
                new ObjectParameter("ToDoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DELETE_ITEM_TO_DO", toDoIDParameter);
        }
    
        public virtual int ADD_ITEM(string description, Nullable<byte> status, Nullable<long> toDoID)
        {
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var toDoIDParameter = toDoID.HasValue ?
                new ObjectParameter("ToDoID", toDoID) :
                new ObjectParameter("ToDoID", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_ITEM", descriptionParameter, statusParameter, toDoIDParameter);
        }
    
        public virtual int ADD_TO_DO(string name, string description, Nullable<System.DateTime> deadline, Nullable<byte> status, Nullable<System.Guid> userId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            var descriptionParameter = description != null ?
                new ObjectParameter("Description", description) :
                new ObjectParameter("Description", typeof(string));
    
            var deadlineParameter = deadline.HasValue ?
                new ObjectParameter("Deadline", deadline) :
                new ObjectParameter("Deadline", typeof(System.DateTime));
    
            var statusParameter = status.HasValue ?
                new ObjectParameter("Status", status) :
                new ObjectParameter("Status", typeof(byte));
    
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("UserId", userId) :
                new ObjectParameter("UserId", typeof(System.Guid));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ADD_TO_DO", nameParameter, descriptionParameter, deadlineParameter, statusParameter, userIdParameter);
        }
    }
}
